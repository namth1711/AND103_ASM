// Generated by view binder compiler. Do not edit!
package com.example.and103_asm.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.Spinner;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.and103_asm.R;
import com.google.android.material.textfield.TextInputEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogUpdateFruitBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView avatar;

  @NonNull
  public final Button btnCancel;

  @NonNull
  public final Button btnUpdate;

  @NonNull
  public final TextInputEditText edDescription;

  @NonNull
  public final TextInputEditText edName;

  @NonNull
  public final TextInputEditText edPrice;

  @NonNull
  public final TextInputEditText edQuantity;

  @NonNull
  public final TextInputEditText edStatus;

  @NonNull
  public final Spinner spDistributor;

  private DialogUpdateFruitBinding(@NonNull LinearLayout rootView, @NonNull ImageView avatar,
      @NonNull Button btnCancel, @NonNull Button btnUpdate,
      @NonNull TextInputEditText edDescription, @NonNull TextInputEditText edName,
      @NonNull TextInputEditText edPrice, @NonNull TextInputEditText edQuantity,
      @NonNull TextInputEditText edStatus, @NonNull Spinner spDistributor) {
    this.rootView = rootView;
    this.avatar = avatar;
    this.btnCancel = btnCancel;
    this.btnUpdate = btnUpdate;
    this.edDescription = edDescription;
    this.edName = edName;
    this.edPrice = edPrice;
    this.edQuantity = edQuantity;
    this.edStatus = edStatus;
    this.spDistributor = spDistributor;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogUpdateFruitBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogUpdateFruitBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_update_fruit, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogUpdateFruitBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.avatar;
      ImageView avatar = ViewBindings.findChildViewById(rootView, id);
      if (avatar == null) {
        break missingId;
      }

      id = R.id.btn_cancel;
      Button btnCancel = ViewBindings.findChildViewById(rootView, id);
      if (btnCancel == null) {
        break missingId;
      }

      id = R.id.btn_update;
      Button btnUpdate = ViewBindings.findChildViewById(rootView, id);
      if (btnUpdate == null) {
        break missingId;
      }

      id = R.id.ed_description;
      TextInputEditText edDescription = ViewBindings.findChildViewById(rootView, id);
      if (edDescription == null) {
        break missingId;
      }

      id = R.id.ed_name;
      TextInputEditText edName = ViewBindings.findChildViewById(rootView, id);
      if (edName == null) {
        break missingId;
      }

      id = R.id.ed_price;
      TextInputEditText edPrice = ViewBindings.findChildViewById(rootView, id);
      if (edPrice == null) {
        break missingId;
      }

      id = R.id.ed_quantity;
      TextInputEditText edQuantity = ViewBindings.findChildViewById(rootView, id);
      if (edQuantity == null) {
        break missingId;
      }

      id = R.id.ed_status;
      TextInputEditText edStatus = ViewBindings.findChildViewById(rootView, id);
      if (edStatus == null) {
        break missingId;
      }

      id = R.id.sp_distributor;
      Spinner spDistributor = ViewBindings.findChildViewById(rootView, id);
      if (spDistributor == null) {
        break missingId;
      }

      return new DialogUpdateFruitBinding((LinearLayout) rootView, avatar, btnCancel, btnUpdate,
          edDescription, edName, edPrice, edQuantity, edStatus, spDistributor);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
